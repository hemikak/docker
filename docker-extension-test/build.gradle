/*
 * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

apply from: "$rootDir/gradle/javaProject.gradle"

configurations {
    bDistributionDir
    dockerExtensionPlugin
    dockerBallerinaBirDir
    dockerBallerinaJar
}

dependencies {
    implementation project(":docker-generator")
    implementation project(":docker-extension")
    implementation project(":docker-extension-annotations")
    implementation "com.github.docker-java:docker-java:${dockerJavaVersion}"

    testImplementation "org.ballerinalang:ballerina-lang:2.0.0-SNAPSHOT"
    testImplementation "org.slf4j:slf4j-api:${slf4jVersion}"
    testImplementation "org.slf4j:slf4j-log4j12:${slf4jVersion}"
    testImplementation "org.testng:testng:${testngVersion}"
    testImplementation "commons-codec:commons-codec:${commonsCodecVersion}"

    dockerExtensionPlugin project(path: ":docker-extension", configuration: "shadow")
    bDistributionDir project(path: ":docker-extension-annotations", configuration: "bDistributionDir")
    dockerBallerinaBirDir project(path: ":docker-extension-annotations", configuration: "dockerBallerinaBirDir")
    dockerBallerinaJar project(path: ":docker-extension-annotations", configuration: "dockerBallerinaJar")
}

description = 'Ballerinax - Docker Extension Tests'

def distributionLocation = configurations.bDistributionDir.singleFile

task copyBalDockerExt {
    dependsOn configurations.dockerExtensionPlugin
    doLast {
        copy {
            from configurations.dockerExtensionPlugin
            into file("${distributionLocation}/bre/lib/")
        }
    }
}

task copyBallerinaArtifacts {
    dependsOn configurations.dockerBallerinaBirDir
    dependsOn configurations.dockerBallerinaJar
    doLast {
        copy {
            from configurations.dockerBallerinaBirDir
            into file("${distributionLocation}/bir-cache/ballerina")
        }
        copy {
            from configurations.dockerBallerinaJar
            into file("${distributionLocation}/bre/lib/")
        }
    }
}

task prepareDistribution {
    dependsOn copyBalDockerExt
    dependsOn copyBallerinaArtifacts
}

test {
    dependsOn prepareDistribution
    useTestNG() {
        suites 'src/test/resources/testng.xml'
        systemProperties = [
            sampleDir: System.getProperty('sampleDir', project.projectDir.absolutePath + "/../samples"),
            ballerinaPack: System.getProperty('ballerinaPack', "$configurations.bDistributionDir.singleFile.absolutePath"),
            jacocoAgentLine: "-javaagent:${configurations.jacocoRuntime.asPath}=destfile=${test.jacoco.destinationFile.absolutePath},append=true,inclnolocationclasses=true"
        ]
	}
}
